<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
    
    <import resource="securityContext.xml"/>

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:ui.properties</value>
            </list>
        </property>
    </bean>
    
    <bean id="proxyMappings" class="uk.co.revsys.proxy.ProxyMapFactoryBean">
        <property name="location" value="classpath:proxy.properties"/>
    </bean>
    
    <bean id="resourceProvider" class="uk.co.revsys.resource.repository.provider.ResourceProvider">
        <constructor-arg index="0" ref="resourceRepository"/>
        <constructor-arg index="1" value="${resources.path}"/>
        <constructor-arg index="2" ref="resourceFilter"/>
        <constructor-arg index="3" ref="zipResourceLoader"/>
    </bean>
    
    <bean id="resourceRepositoryFactory" class="uk.co.revsys.resource.repository.ResourceRepositoryFactory">
        <constructor-arg index="0">
            <map key-type="java.lang.String" value-type="uk.co.revsys.resource.repository.ResourceRepositoryBuilder">
                <entry key="local" value-ref="localDiskResourceRepositoryBuilder"/>
                <entry key="cloud" value-ref="jCloudResourceRepositoryBuilder"/>
            </map>
        </constructor-arg>
    </bean>
    
    <bean id="localDiskResourceRepositoryBuilder" class="uk.co.revsys.resource.repository.LocalDiskResourceRepositoryBuilder">
        <constructor-arg index="0" value="${resources.container}"/>
    </bean>
    
    <bean id="jCloudResourceRepositoryBuilder" class="uk.co.revsys.resource.repository.cloud.JCloudResourceRepositoryBuilder">
        <constructor-arg index="0" value="${cloud.type}"/>
        <constructor-arg index="1" value="${cloud.identity}"/>
        <constructor-arg index="2" value="${cloud.credential}"/>
        <constructor-arg index="3" value="${resources.container}"/>
    </bean>
	
    <bean id="resourceRepository" factory-bean="resourceRepositoryFactory" factory-method="build">
        <constructor-arg index="0" value="${repository.type}"/>
    </bean>
    
    <bean id="resourceFilter" class="uk.co.revsys.resource.repository.provider.filter.AcceptAllResourceFilter"/>
    
    <bean id="zipResourceLoader" class="uk.co.revsys.resource.repository.provider.handler.TarGZResourceHandler">
        <constructor-arg index="0" ref="resourceLoader"/>
    </bean>
    
    <bean id="resourceLoader" class="uk.co.revsys.ui.framework.WebappResourceLoader"/>
    
    <bean id="accountShieldClient" class="uk.co.revsys.account.shield.AccountShieldClientImpl">
        <constructor-arg index="0" value="${as.url}"/>
        <constructor-arg index="1" value="${as.account}"/>
        <constructor-arg index="2" value="${as.username}"/>
        <constructor-arg index="3" value="${as.password}"/>
    </bean>
</beans>
